<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" package="com.gizwits.opensource.appkit"
    android:versionCode="1" android:versionName="2.5.1.072715">

    <!--push-all-start-->
    <!--push_jiguang-false-start-->
    <!-- 极光推送 -->
    <permission android:name="com.gizwits.opensource.appkit.permission.JPUSH_MESSAGE"
        android:protectionLevel="signature" />

    <!-- Required  一些系统要求的权限，如访问网络等 -->
    <uses-permission android:name="com.gizwits.opensource.appkit.permission.JPUSH_MESSAGE" />

    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
        tools:ignore="ProtectedPermissions" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS"
        tools:ignore="ProtectedPermissions" />

    <!-- Optional. Required for location feature -->
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <!-- 极光推送 -->
    <!--push_jiguang-false-end-->

    <!--push_baidu-false-start-->
    <!-- 百度推送 -->
    <!-- Push service 运行需要的权限 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />

    <!-- 富媒体需要声明的权限 -->
    <uses-permission android:name="android.permission.ACCESS_DOWNLOAD_MANAGER" />
    <uses-permission android:name="android.permission.DOWNLOAD_WITHOUT_NOTIFICATION" />
    <uses-permission android:name="android.permission.EXPAND_STATUS_BAR" />

    <!-- 适配Android N系统必需的ContentProvider写权限声明，写权限包含应用包名-->
    <uses-permission
        android:name="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.gizwits.opensource.appkit" />

    <permission android:name="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.gizwits.opensource.appkit"
        android:protectionLevel="signature"></permission>
    <!--push_baidu-false-end-->
    <!--push-all-end-->

    <!-- SDK 使用权限 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_LOGS"
        tools:ignore="ProtectedPermissions" />
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.FLASHLIGHT" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <!-- 乐鑫配置库中使用的权限（WIFI组播） -->
    <uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" />

    <uses-feature android:name="android.hardware.camera" />
    <uses-feature android:name="android.hardware.camera.autofocus" />

    <uses-permission android:name="android.permission.GET_TASKS" />

    <application android:name="com.gizwits.opensource.appkit.GosApplication"
        android:allowBackup="true" android:icon="@drawable/icon" android:label="@string/app_name"
        android:theme="@style/AppTheme">
        <!--<meta-data-->
        <!--android:name="UMENG_APPKEY"-->
        <!--android:value="55bf3f4b67e58eced6002ea3" />-->
        <!--<meta-data-->
        <!--android:name="UMENG_MESSAGE_SECRET"-->
        <!--android:value="090399528857c395d540ce933c679d69" />-->


        <meta-data android:name="UMENG_APPKEY" android:value="57c3eb24e0f55a32ba0019de"></meta-data>
        <meta-data android:name="UMENG_MESSAGE_SECRET"
            android:value="046bcebdeaa31b356a6866b1639eed1c"></meta-data>

        <meta-data android:name="UMENG_CHANNEL" android:value="gizwits" />


        <activity android:name="com.gizwits.opensource.appkit.CommonModule.SplashActivity"
            android:label="@string/app_name" android:launchMode="singleTask"
            android:theme="@style/SplashTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!--login_qq-false-start-->
        <!-- 在此处填写腾讯官网申请的AppKey  -->
        <activity android:name="com.tencent.tauth.AuthActivity" android:launchMode="singleTask"
            android:noHistory="true">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <!--1105495693      tencent1105509702-->
                <data android:scheme="tencent1105495693" />
            </intent-filter>
        </activity>
        <activity android:name="com.tencent.connect.common.AssistActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--login_qq-false-end-->
        <!--login_weChat-false-start-->
        <!--微信登录-->
        <!--<activity android:name="com.gizwits.opensource.appkit.wxapi.WXEntryActivity"-->
        <!--android:exported="true"></activity>-->

        <activity android:name=".wxapi.WXEntryActivity"
            android:configChanges="keyboardHidden|orientation|screenSize" android:exported="true"
            android:launchMode="singleTop" android:screenOrientation="portrait"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"></activity>
        <!--login_weChat-false-end-->

        <!-- 以下是框架中使用的Activity -->
        <activity android:name="com.gizwits.opensource.appkit.UserModule.GosUserLoginActivity"
            android:launchMode="singleTask" />
        <!--register-all-start-->
        <activity android:name="com.gizwits.opensource.appkit.UserModule.GosRegisterUserActivity" />
        <!--register-all-end-->
        <!--resetPassword-all-start-->
        <activity
            android:name="com.gizwits.opensource.appkit.UserModule.GosForgetPasswordActivity" />
        <!--resetPassword-all-end-->
        <activity
            android:name="com.gizwits.opensource.appkit.UserModule.GosSendEmailPasswordActivity" />
        <activity android:name="zxing.CaptureActivity" android:theme="@style/AppTheme" />
        <activity android:name="com.gizwits.opensource.appkit.SettingsModule.GosAboutActivity" />

        <activity
            android:name="com.gizwits.opensource.appkit.ControlModule.GosDeviceControlActivity" />

        <!--config-all-start-->
        <!--config_softap-false-start-->
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosChooseDeviceWorkWiFiActivity" />
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosDeviceReadyActivity" />
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosChooseDeviceActivity" />
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosConfigCountdownActivity" />
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosDeviceResetActivity" />
        <!--config_softap-false-end-->
        <!--config_airlink-false-start-->
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosAirlinkChooseDeviceWorkWiFiActivity" />
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosAirlinkConfigCountdownActivity" />
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosAirlinkReadyActivity" />
        <!--config_airlink-false-end-->
        <!--wifiModuleType-true-start-->
        <activity android:name="com.gizwits.opensource.appkit.ConfigModule.GosModeListActivity" />
        <!--wifiModuleType-true-end-->
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosConfigFailedActivity" />
        <activity android:name="com.gizwits.opensource.appkit.ConfigModule.GosModeListActivity2" />
        <activity
            android:name="com.gizwits.opensource.appkit.ConfigModule.GosChooseModuleHelpActivity" />
        <!--config-all-end-->

        <!-- <activity android:name="com.gizwits.setting.DeployThingActivity" > -->
        <!-- </activity> -->
        <activity android:name="com.gizwits.opensource.appkit.DeviceModule.GosMainActivity"
            android:launchMode="singleTask" />
        <activity android:name="com.gizwits.opensource.appkit.UserModule.GosUserManager" />
        <!--personalCenter_changePassword-false-start-->
        <activity
            android:name="com.gizwits.opensource.appkit.UserModule.GosChangeUserPasswordActivity" />
        <!--personalCenter_changePassword-false-end-->

        <activity android:name="com.gizwits.opensource.appkit.sharingdevice.SharedDeviceListAcitivity" />
        <activity android:name="com.gizwits.opensource.appkit.sharingdevice.SharedDeviceManagerActivity" />
        <activity android:name="com.gizwits.opensource.appkit.sharingdevice.addSharedActivity" />
        <activity android:name="com.gizwits.opensource.appkit.sharingdevice.twoSharedActivity" />
        <activity android:name="com.gizwits.opensource.appkit.sharingdevice.userSharedActivity" />
        <activity android:name="com.gizwits.opensource.appkit.sharingdevice.deviceSharedMessageActivity" />
        <activity android:name="com.gizwits.opensource.appkit.sharingdevice.gosZxingDeviceSharingActivity" />


        <!--push-all-start-->
        <!--push_jiguang-false-start-->
        <!-- 极光推送 -->
        <!-- Required SDK 核心功能 -->
        <!-- option since 2.0.5 可配置PushService，DaemonService,PushReceiver,AlarmReceiver的android:process参数 将JPush相关组件设置为一个独立进程 -->
        <!-- 如：android:process=":remote" -->
        <service android:name="cn.jpush.android.service.PushService" android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTER" />
                <action android:name="cn.jpush.android.intent.REPORT" />
                <action android:name="cn.jpush.android.intent.PushService" />
                <action android:name="cn.jpush.android.intent.PUSH_TIME" />
            </intent-filter>
        </service>


        <!-- since 1.8.0 option 可选项。用于同一设备中不同应用的JPush服务相互拉起的功能。 -->
        <!-- 若不启用该功能可删除该组件，将不拉起其他应用也不能被其他应用拉起 -->
        <service android:name="cn.jpush.android.service.DaemonService" android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.DaemonService" />

                <category android:name="com.gizwits.opensource.appkit" />
            </intent-filter>
        </service>
        <!-- Required -->
        <receiver android:name="cn.jpush.android.service.PushReceiver" android:enabled="true">
            <intent-filter android:priority="1000">
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" />

                <category android:name="com.gizwits.opensource.appkit" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
            <!--Optional-->
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED" />
                <action android:name="android.intent.action.PACKAGE_REMOVED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>
        <!--Required SDK核心功能-->
        <activity android:name="cn.jpush.android.ui.PushActivity"
            android:configChanges="orientation|keyboardHidden" android:exported="true">
            <intent-filter>
                <action android:name="cn.jpush.android.ui.PushActivity" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="com.gizwits.opensource.appkit" />
            </intent-filter>
        </activity>
        <!--Required SDK核心功能-->
        <service android:name="cn.jpush.android.service.DownloadService" android:enabled="true"
            android:exported="false"></service>
        <!--Required SDK核心功能-->
        <receiver android:name="cn.jpush.android.service.AlarmReceiver" />

        <!--User defined. 用户自定义的广播接收器-->
        <receiver android:name="com.gizwits.opensource.appkit.PushModule.JPushReceiver"
            android:enabled="true">
            <intent-filter>
                <!--Required 用户注册SDK的intent-->
                <action android:name="cn.jpush.android.intent.REGISTRATION" />
                <!--Required 用户接收SDK消息的intent-->
                <action android:name="cn.jpush.android.intent.MESSAGE_RECEIVED" />
                <!--Required 用户接收SDK通知栏信息的intent-->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED" />
                <!--Required 用户打开自定义通知栏的intent-->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_OPENED" />
                <!--Optional 用户接受Rich Push Javascript 回调函数的intent-->
                <action android:name="cn.jpush.android.intent.ACTION_RICHPUSH_CALLBACK" />
                <!--接收网络变化 连接/断开 since 1.6.3-->
                <action android:name="cn.jpush.android.intent.CONNECTION" />

                <category android:name="com.gizwits.opensource.appkit" />
            </intent-filter>
        </receiver>

        <!--Required. For publish channel feature-->
        <!--JPUSH_CHANNEL 是为了方便开发者统计APK分发渠道。-->
        <!--例如:-->
        <!--发到 Google Play 的APK可以设置为 google-play;-->
        <!--发到其他市场的 APK 可以设置为 xxx-market。-->
        <!--目前这个渠道统计功能的报表还未开放。-->
        <meta-data android:name="JPUSH_CHANNEL" android:value="developer-default" />
        <!--Required. AppKey copied from Portal-->
        <meta-data android:name="JPUSH_APPKEY" android:value="JPUSH_APPKEY" />

        <!--push_jiguang-false-end-->


        <!--push_baidu-false-start-->
        <!--百度推送-->
        <!--push service start-->
        <!--用于接收系统消息以保证PushService正常运行-->
        <receiver android:name="com.baidu.android.pushservice.PushServiceReceiver"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="com.baidu.android.pushservice.action.notification.SHOW" />
                <action android:name="com.baidu.android.pushservice.action.media.CLICK" />
                <!--以下四项为可选的action声明，可大大提高service存活率和消息到达速度-->
                <action android:name="android.intent.action.MEDIA_MOUNTED" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <!--Push服务接收客户端发送的各种请求-->
        <receiver android:name="com.baidu.android.pushservice.RegistrationReceiver"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.METHOD" />
                <action android:name="com.baidu.android.pushservice.action.BIND_SYNC" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REMOVED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>

        <service android:name="com.baidu.android.pushservice.PushService" android:exported="true"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.PUSH_SERVICE" />
            </intent-filter>
        </service>
        <!--4.4版本新增的CommandService声明，提升小米和魅族手机上的实际推送到达率-->
        <service android:name="com.baidu.android.pushservice.CommandService"
            android:exported="true" />

        <!-- 适配Android N系统必需的ContentProvider声明，写权限包含应用包名-->
        <provider android:name="com.baidu.android.pushservice.PushInfoProvider"
            android:authorities="com.gizwits.opensource.appkit.bdpush" android:exported="true"
            android:protectionLevel="signature"
            android:writePermission="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.gizwits.opensource.appkit" />

        <!--push结束-->

        <!--此处Receiver名字修改为当前包名路径-->
        <receiver android:name="com.gizwits.opensource.appkit.PushModule.BaiDuPushReceiver">
            <intent-filter>

                <!--接收push消息-->
                <action android:name="com.baidu.android.pushservice.action.MESSAGE" />
                <!--接收bind、setTags等method的返回结果-->
                <action android:name="com.baidu.android.pushservice.action.RECEIVE" />
                <!--接收通知点击事件，和通知自定义内容-->
                <action android:name="com.baidu.android.pushservice.action.notification.CLICK" />
            </intent-filter>
        </receiver>

        <!-- 在百度开发者中心查询应用的API Key -->
        <meta-data android:name="api_key" android:value="BaiDu_APIKEY" />
        <!--push_baidu-false-end-->
        <!--push-all-end-->


    </application>

</manifest>